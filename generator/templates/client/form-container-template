import * as React from 'react';
import { baseConnectForm } from '@base/features/base-redux-react-connect';
import { InjectedFormProps } from 'redux-form';
import { IApplicationState } from 'actions/redux';
// import <%= className %>Actions, { <%= classNameLowerCase %>Selector } from 'actions/redux/<%= classNameLowerCase %>';

interface IProps extends InjectedFormProps {

}

class <%= className %> extends Component<IProps> {
    render() {

        return (
            <form onSubmit={this.props.handleSubmit(this.handleSubmit.bind(this))} >

            </form>
        );

    }

    handleSubmit(props: IProps) {
        // handle submit here
    }

    validate(values: any) {
        const errors = {};

        /* EXAMPLE CODE
        if (!values.title) {
            errors.title = 'someTitle';
        }
        */

        return errors;
    }
}


export default baseConnectForm(<%= className %>,
    (state: IApplicationState) => {
        return {

        }
    },
    {

    },
    {
        form : '<%= className %>Form',
        fields: []
    }
);
